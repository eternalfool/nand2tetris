// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // incremint
    Inc16(in=AnotherOut, out=inco);
    // inc sel
    Mux16(a=in, b=inco, sel=inc, out=incOut);
    // if load
    Mux16(a=incOut, b=in, sel=load, out=aout);
    // reset
    Mux16(a=aout, b=false, sel=reset, out=resetOut);
    // The following was not needed, load is always true
    // force load to be true if inc or reset 
    // Mux(a=load, b=true, sel=inc, out=loadIncOut);
    // Mux(a=loadIncOut, b=true, sel=reset, out=loadResetIncOut);
    Register(in=resetOut, load=true, out=out, out=AnotherOut);
    // Put your code here:
}
